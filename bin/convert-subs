#!/usr/local/bin/php -q
<?
# convert-subs:
# Convert people from the old system to the new.
#
# Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org. WWW: http://www.mysociety.org/
# 
# $Id: convert-subs,v 1.6 2007-09-18 12:58:29 matthew Exp $

require_once "../conf/general";
require_once '../commonlib/phplib/db.php';
require_once '../commonlib/phplib/utility.php';
require_once '../commonlib/phplib/mapit.php';

define('NEW_AREA_GENERATION', 13);

$wrong = 0; $deleted = 0; $right = 0;
$q = db_query('select id, area_id, postcode, person_id from constituent');
while ($r = db_fetch_array($q)) {
    $id = $r['id'];
    $postcode = canonicalise_postcode($r['postcode']);
    $areas = mapit_get_voting_areas($postcode);
    if (mapit_get_error($areas)) {
        print "No current area for $postcode (id $id)\n";
        $wrong++;
        continue;
    }
    $new_areas = mapit_get_voting_areas($pc, NEW_AREA_GENERATION);
    if (mapit_get_error($new_areas)) {
        print "No new area for $postcode (id $id)\n";
        $wrong++;
        continue;
    }
    $old_id = $areas['WMC'];
    $new_id = $new_areas['WMC'];
    $already_exist = db_getOne('select id from constituent where constituency = ? and person_id = ?', array($new_id, $r['person_id']));
    if ($already_exist) {
        #db_query('delete from constituent where id = ?', array($id));
        print "Deleting duplicate entry $id, postcode $postcode\n";
        $deleted++;
    } else {
        #db_query("update constituent set constituency=? where id=?", array($new_id, $id));
        print "Updating entry $id, postcode $postcode from $old_id to $new_id\n";
        $right++;
    }

}

print "\n$wrong wrong postcodes, $right updated, $deleted dupes deleted.\n";

