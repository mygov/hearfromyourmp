#!/usr/bin/php -q
<?php
/*
 * create-rep-login-url
 * Run to create a URL to send to a rep. who has previously emailed us
 * messages, so they can post them themselves in future. The same URL
 * that send-rep-threshold-alerts sends, but we don't want to wait unti
 * then (presumably, we've got an email from the rep. or similar).
 * 
 * Copyright (c) 2006 UK Citizens Online Democracy. All rights reserved.
 * Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
 *
 * $Id: create-rep-login-url,v 1.2 2007-10-31 17:15:52 matthew Exp $
 * 
 */

$short_opts = '';
$long_opts = array('verbose', 'help', 'rep=');

chdir(dirname($_SERVER['SCRIPT_FILENAME']));
require_once '../../phplib/phpcli.php';
require_once '../../phplib/cli.php';
require_once '../../phplib/db.php';
require_once "../../phplib/person.php";
require_once '../conf/general';
require_once '../phplib/reps.php';

$switches = $options[0];
$args = $options[1];
foreach ($switches as $switch) {
    if ($switch[0]=='--verbose') $cli_is_verbose = 1;
    if ($switch[0]=='--rep') $rep = $switch[1];
    if ($switch[0]=='--help') {
?>

YCML show representative login URL.

Usage: create-rep-login-url --rep=ID [--verbose]

--rep           Representative ID to return URL for
--help          Display this help message
--verbose       Display more information

<?
        exit;
    }
}

db_connect();
$rep_info = ycml_get_rep_info($rep);
dadem_check_error($rep_info);
                    
if (!isset($rep_info['email']) || $rep_info['email'] === '') {
    warning("no email address available for ${rep_info['name']}");
    if ($rep_info['email'] === '')
        error("email address returned by DaDem was blank; should be null");
    exit;
}
verbose("email address for this representative is ${rep_info['email']}");

$url = person_make_signon_url(null, $rep_info['email'], 'GET', OPTION_BASE_URL . '/post/r' . $rep, null);
db_commit();
print "URL: $url\n";

