#!/usr/local/bin/php -q
<?php
/*
 * send-mp-message-confirmations:
 * Run from cron regularly to send copies of MP messages to their registered
 * addresses for confirmation.
 * 
 * Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
 * Email: chris@mysociety.org; WWW: http://www.mysociety.org/
 *
 * $Id: send-mp-message-confirmations,v 1.6 2005-11-11 12:34:57 francis Exp $
 * 
 */

require_once '../conf/general';
require_once '../phplib/fns.php';
require_once '../../phplib/auth.php';
require_once '../../phplib/cli.php';
require_once '../../phplib/db.php';
require_once '../../phplib/utility.php';

$short_opts = '';
$long_opts = array('verbose','help');
require_once '../../phplib/phpcli.php';

$switches = $options[0];
$args = $options[1];
foreach ($switches as $switch) {
    if ($switch[0]=='--verbose') $cli_is_verbose = 1;
    if ($switch[0]=='--help') {
?>

YCML MP message confirmation sending script

Usage: send-mp-message-confirmations [--verbose]

--help      Display this help message
--verbose   Display more information

<?
        exit;
    }
}

db_connect();
send_mp_message_confirmations();

function send_mp_message_confirmations() {
    verbose("sending MP message confirmations");

    db_query("lock table message in share mode");

    $q = db_query("
            select message.id, constituency, subject, content, confirmation_email
            from message left join constituency
                on message.constituency = constituency.id
            where state = 'new'");

    while (list($id, $constituency, $subject, $content, $email)
            = db_fetch_row($q)) {
        $rep_info = ycml_get_mp_info($constituency);
        if (is_null($email)) {
            if (!isset($rep_info['email']) || $rep_info['email'] === '') {
                error("no confirmation email address available for ${rep_info['name']} MP and no DaDem email contact either");
                continue;
            } else {
                warning("no confirmation email address available for ${rep_info['name']} MP; using DaDem address ${rep_info['email']}");
                db_query('insert into constituency (id, confirmation_email) values (?, ?)', array($constituency, $rep_info['email']));
                $confirmation_email = $rep_info['email'];
            }
        }

        $token = auth_token_store('message', array('id' => $id));
        $url = OPTION_BASE_URL . "/M/$token";

        verbose("sending mail about message #$id as from ${rep_info['name']} MP to $email...");

        $row = array(
                'content' => $content,
                'confirm_url' => $url,
                'subscribers' => db_getOne('select count(id) from constituent where constituency = ?', $constituency)
            );

        $f = ycml_send_email_template($email, 'mp-message-confirm', $row);
        if (!$f) {
            error("failed to send confirmation email to $email for message #$id");
        } else {
            verbose("sent");
            db_query("update message set state = 'ready' where id = ?", $id);
        }
    }
    
    db_commit();
}

?>
